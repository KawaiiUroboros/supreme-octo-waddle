{
  "swagger": "2.0",
  "info": {
    "title": "hospital.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/incidents": {
      "post": {
        "summary": "create incident",
        "operationId": "HospitalService_CreateIncident",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/emergenceCreateIncidentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/emergenceCreateIncidentRequest"
            }
          }
        ],
        "tags": [
          "HospitalService"
        ]
      }
    },
    "/teams": {
      "post": {
        "summary": "create team",
        "operationId": "HospitalService_CreateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/emergenceCreateTeamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/emergenceCreateTeamRequest"
            }
          }
        ],
        "tags": [
          "HospitalService"
        ]
      }
    },
    "/teams/{team_id}/is_blocked": {
      "put": {
        "summary": "Set team is_blocked false",
        "operationId": "HospitalService_SetTeamIsBlockedFalse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/emergenceSetTeamIsBlockedFalseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "HospitalService"
        ]
      }
    },
    "/users/{external_user_id}/city_and_address": {
      "get": {
        "summary": "Get city and address by external user id",
        "operationId": "HospitalService_GetCityAndAddressByExternalUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/emergenceGetCityAndAddressByExternalUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "external_user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "HospitalService"
        ]
      }
    }
  },
  "definitions": {
    "emergenceCreateIncidentRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      },
      "title": "create incident request"
    },
    "emergenceCreateIncidentResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      },
      "title": "create incident response"
    },
    "emergenceCreateTeamRequest": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "city": {
          "type": "string"
        }
      },
      "title": "create team request"
    },
    "emergenceCreateTeamResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      },
      "title": "create team response"
    },
    "emergenceGetCityAndAddressByExternalUserIdResponse": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      },
      "title": "get city and address by external user id response"
    },
    "emergenceSetTeamIsBlockedFalseResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      },
      "title": "set team is_blocked false response"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
